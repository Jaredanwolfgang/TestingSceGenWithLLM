{
  "docstring": "\"\"\"\nTITLE: Bypassing 04\nAUTHOR: Francis Indaheng, findaheng@berkeley.edu\nDESCRIPTION: Ego vehicle performs multiple lane changes to bypass \ntwo slow adversary vehicles.\nSOURCE: NHSTA, #16\n\"\"\"",
  "has_docstring": true,
  "map_and_model": "\nparam map = localPath('../../../assets/maps/CARLA/Town03.xodr')\nparam carla_map = 'Town03'\nmodel scenic.simulators.carla.model\n\n",
  "constants": "\nMODEL = 'vehicle.lincoln.mkz_2017'\n\nparam EGO_SPEED = VerifaiRange(6, 8)\n\nparam ADV1_DIST = VerifaiRange(20, 25)\nparam ADV2_DIST = globalParameters.ADV1_DIST + VerifaiRange(15, 20)\nparam ADV_SPEED = VerifaiRange(2, 4)\n\nBYPASS_DIST = 15\nINIT_DIST = 50\nTERM_DIST = globalParameters.ADV2_DIST + 15\n\n",
  "monitors": null,
  "behaviors": "\nbehavior EgoBehavior():\n    try:\n        do FollowLaneBehavior(target_speed=globalParameters.EGO_SPEED)\n    interrupt when (distance to adversary_1) < BYPASS_DIST:\n        newLaneSec = self.laneSection.laneToRight\n        do LaneChangeBehavior(\n            laneSectionToSwitch=newLaneSec,\n            target_speed=globalParameters.EGO_SPEED)\n    interrupt when (distance to adversary_2) < BYPASS_DIST:\n        newLaneSec = self.laneSection.laneToLeft\n        do LaneChangeBehavior(\n            laneSectionToSwitch=newLaneSec,\n            target_speed=globalParameters.EGO_SPEED)\n\nbehavior Adversary2Behavior():\n    rightLaneSec = self.laneSection.laneToRight\n    do LaneChangeBehavior(\n        laneSectionToSwitch=rightLaneSec,\n        target_speed=globalParameters.ADV_SPEED)\n    do FollowLaneBehavior(target_speed=globalParameters.ADV_SPEED)\n\n",
  "spatial_relations": "\ninitLane = Uniform(*filter(lambda lane:\n    all([sec._laneToRight is not None for sec in lane.sections]),\n    network.lanes))\negoSpawnPt = new OrientedPoint in initLane.centerline\negoLaneSecToSwitch = initLane.sectionAt(egoSpawnPt).laneToRight\n\n",
  "scenario": "\nego = new Car at egoSpawnPt,\n    with blueprint MODEL,\n    with behavior EgoBehavior()\n\nadversary_1 = new Car following roadDirection for globalParameters.ADV1_DIST,\n    with blueprint MODEL,\n    with behavior FollowLaneBehavior(target_speed=globalParameters.ADV_SPEED)\n\nadversary_2 = new Car following roadDirection for globalParameters.ADV2_DIST,\n    with blueprint MODEL,\n    with behavior Adversary2Behavior()\n\nrequire (distance to intersection) > INIT_DIST\nrequire (distance from adversary_1 to intersection) > INIT_DIST\nrequire (distance from adversary_2 to intersection) > INIT_DIST\nterminate when (distance to adversary_2) > TERM_DIST\n",
  "name": "bypassing_04"
}