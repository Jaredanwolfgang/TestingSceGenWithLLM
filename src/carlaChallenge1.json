{
  "docstring": "\"\"\" Scenario Description\nTraffic Scenario 01.\nControl loss without previous action.\nThe ego-vehicle loses control due to bad conditions on the road and it must recover, coming back to\nits original lane.\n\"\"\"",
  "has_docstring": true,
  "map_and_model": "paramparam carla_map = 'Town01'\nmodel scenic.simulators.carla.model\n\n",
  "constants": "EGO_MODELEGO_SPEED = 10\n\n",
  "monitors": null,
  "behaviors": "behavior    do FollowLaneBehavior(speed)\n\n",
  "spatial_relations": "\nlane = Uniform(*network.lanes)\n\nstart = new OrientedPoint on lane.centerline\nego = new Car at start,\n    with blueprint EGO_MODEL,\n    with behavior EgoBehavior(EGO_SPEED)\n\ndebris1 = new Debris following roadDirection for Range(10, 20)\ndebris2 = new Debris following roadDirection from debris1 for Range(5, 10)\ndebris3 = new Debris following roadDirection from debris2 for Range(5, 10)\n\nrequire (distance to intersection) > 50\nterminate when (distance from debris3 to ego) > 10 and (distance to start) > 50\n",
  "scenario": null,
  "background": null,
  "name": "carlaChallenge1"
}

[{'role': 'system', 'name': 'example_user', 'content': '""" Scenario description\n""" Scenario Description\nTraffic Scenario 01.\nControl loss without previous action.\nThe ego-vehicle loses control due to bad conditions on the road and it must recover, coming back to\nits original lane.\n"""\n"""'}, {'role': 'system', 'name': 'example_assistant', 'content': "```##Map and Model##\nparamparam carla_map = 'Town01'\nmodel scenic.simulators.carla.model\n\n\n##Constants##\nEGO_MODELEGO_SPEED = 10\n\n\n##Moniters##\nNone\n##Defining Agent Behaviors##\nbehavior    do FollowLaneBehavior(speed)\n\n\n##Defining                         Spatial Relations##\n\nlane = Uniform(*network.lanes)\n\nstart = new OrientedPoint on lane.centerline\nego = new Car at start,\n    with blueprint EGO_MODEL,\n    with behavior EgoBehavior(EGO_SPEED)\n\ndebris1 = new Debris following roadDirection for Range(10, 20)\ndebris2 = new Debris following roadDirection from debris1 for Range(5, 10)\ndebris3 = new Debris following roadDirection from debris2 for Range(5, 10)\n\nrequire (distance to intersection) > 50\nterminate when (distance from debris3 to ego) > 10 and (distance to start) > 50\n\n##Scenario Specifications##\nNone\n##Background Activities##\nNone\n```"}]
System message tokens: 153
